name: CI

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: ["master"]
    paths-ignore:
      - "**.md"

env:
  CUDA_VERSION: "12.1.1"
  SWIFTSHADER_DIR: ${{ github.workspace }}/swiftshader-build

jobs:
  build_and_test:
    name: Build (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.24
        id: cuda-toolkit
        with:
          cuda: ${{ env.CUDA_VERSION }}

      - name: Build project in release mode
        run: cargo build --release --verbose

      - name: Install cargo-nextest
        if: runner.os == 'Linux'
        uses: taiki-e/install-action@nextest

      - name: Run tests (Linux with Lavapipe)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y mesa-vulkan-drivers libvulkan1
          cargo nextest run --profile ci

      - name: Publish test report
        if: always() && runner.os == 'Linux'
        uses: dorny/test-reporter@v2.1.1
        with:
          name: Rust Test Results
          path: target/nextest/ci/junit.xml
          reporter: jest-junit
