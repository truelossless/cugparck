on:
  push:
    tags:
      - "*"

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Build Dockerfile
        run: docker build -t rust-cuda .

      - name: Start Docker
        run: docker run -t -d -v $PWD:/root/rust-cuda --name builder rust-cuda

      - name: Install Rust toolchains
        run: |
          rustup install nightly-2021-12-04
          rustup default nightly

      - name: Build executable with CUDA support
        run: |
          docker exec -w /root/rust-cuda builder cargo build --release --features cuda
          docker exec -w /root/rust-cuda/target/release builder cp cugparck-cli cugparck-cli-linux-cuda

      - name: Build executable without CUDA support
        run: |
          docker exec -w /root/rust-cuda builder cargo build --release
          docker exec -w /root/rust-cuda/target/release builder cp cugparck-cli cugparck-cli-linux

      - name: Run tests
        run: docker exec -w /root/rust-cuda builder cargo test --release --no-fail-fast

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cug-linux
          path: |
            target/release/cugparck-cli-linux-cuda
            target/release/cugparck-cli-linux

  build_windows:
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.8
        with:
          cuda: "11.2.2"

      - name: Install Rust toolchains
        run: |
          rustup install nightly-2021-12-04
          rustup default nightly

      - name: Build executable with CUDA support
        run: |
          cargo build --release --features cuda
          cp target/release/cugparck-cli.exe target/release/cugparck-cli-windows-cuda.exe

      - name: Build executable without CUDA support
        run: |
          cargo build --release
          cp target/release/cugparck-cli.exe target/release/cugparck-cli-windows.exe

      - name: Run tests
        run: cargo test --release --no-fail-fast

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cug-windows
          path: |
            target/release/cugparck-cli-windows-cuda.exe
            target/release/cugparck-cli-windows.exe

  upload:
    needs: [build_windows, build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: cug-windows

      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: cug-linux

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          body: This is an automated build for Cugparck ${{ github.ref }}.
          draft: false
          prerelease: true
          files: |
            cugparck-cli-windows-cuda.exe
            cugparck-cli-windows.exe
            cugparck-cli-linux-cuda
            cugparck-cli-linux
