on:
  push:
    tags:
      - "*"

name: Release

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: linux
            ext: ""
          - os: windows-latest
            target: windows
            ext: .exe
    name: ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.8
        with:
          cuda: "11.2.2"

      - name: Populate env
        if: contains(matrix.os, 'ubuntu')
        run: |
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_PATH/compat:$CUDA_PATH/nvvm/lib64" >> $GITHUB_ENV
          echo "LLVM_LINK_SHARED=1" >> $GITHUB_ENV

      - name: Install LLVM 7
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install llvm-7
          sudo ln -s /usr/bin/llvm-config-7 /usr/local/bin/llvm-config

      - name: Install Rust-CUDA toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-12-04
          components: rust-src, rustc-dev, llvm-tools-preview

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true

      - name: Load Rust cache
        uses: Swatinem/rust-cache@v1

      - name: Build executable with CUDA support
        run: |
          cargo build --release --features cuda
          cp target/release/cugparck-cli${{ matrix.ext }} cugparck-cli-${{ matrix.target }}-cuda${{ matrix.ext }}

      - name: Build executable without CUDA support
        run: |
          cargo build --release
          cp target/release/cugparck-cli${{ matrix.ext }} cugparck-cli-${{ matrix.target }}${{ matrix.ext }}

      - name: Run tests
        run: cargo test --release --no-fail-fast

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cug-${{ matrix.target }}
          path: |
            cugparck-cli-${{ matrix.target }}-cuda${{ matrix.ext }}
            cugparck-cli-${{ matrix.target }}${{ matrix.ext }}

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: cug-windows

      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: cug-linux

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          body: This is an automated build for Cugparck ${{ github.ref }}.
          draft: false
          prerelease: true
          files: |
            cugparck-cli-windows-cuda.exe
            cugparck-cli-windows.exe
            cugparck-cli-linux-cuda
            cugparck-cli-linux
